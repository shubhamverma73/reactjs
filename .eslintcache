[{"D:\\xampp\\htdocs\\react\\reactapp\\src\\index.js":"1","D:\\xampp\\htdocs\\react\\reactapp\\src\\App.js":"2","D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\JsFile.js":"3","D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Cardapp.js":"4","D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Passvalue.jsx":"5","D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Hookcall.jsx":"6","D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Dropdown.jsx":"7","D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\IncrementVal.jsx":"8","D:\\xampp\\htdocs\\react\\reactapp\\src\\context\\Compa.jsx":"9","D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Multiplefields.jsx":"10","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\pages\\About.jsx":"11","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\pages\\Contact.jsx":"12","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\pages\\NotFound.jsx":"13","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\pages\\Home.jsx":"14","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\users\\EditUser.jsx":"15","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\users\\ViewUser.jsx":"16","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\users\\Imageupload.jsx":"17","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\users\\AddUsers.jsx":"18","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\layout\\Navigation.jsx":"19","D:\\xampp\\htdocs\\react\\reactapp\\src\\assets\\data.js":"20","D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Card.jsx":"21","D:\\xampp\\htdocs\\react\\reactapp\\src\\context\\Compb.jsx":"22","D:\\xampp\\htdocs\\react\\reactapp\\src\\context\\Compc.jsx":"23","D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Datepicker.jsx":"24","D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Dropdownnew.jsx":"25","D:\\xampp\\htdocs\\react\\reactapp\\src\\assets\\data_new.js":"26","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\pages\\Members.jsx":"27","D:\\xampp\\htdocs\\react\\reactapp\\src\\swDev.jsx":"28","D:\\xampp\\htdocs\\react\\reactapp\\src\\firebase.js":"29","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\pages\\Slider.jsx":"30"},{"size":250,"mtime":1612111252460,"results":"31","hashOfConfig":"32"},{"size":3793,"mtime":1612277902591,"results":"33","hashOfConfig":"32"},{"size":170,"mtime":1610553702330,"results":"34","hashOfConfig":"32"},{"size":495,"mtime":1610893055087,"results":"35","hashOfConfig":"32"},{"size":374,"mtime":1611590399942,"results":"36","hashOfConfig":"32"},{"size":1250,"mtime":1612277902595,"results":"37","hashOfConfig":"32"},{"size":627,"mtime":1611856041656,"results":"38","hashOfConfig":"32"},{"size":1018,"mtime":1610873695941,"results":"39","hashOfConfig":"32"},{"size":771,"mtime":1611426973851,"results":"40","hashOfConfig":"32"},{"size":6290,"mtime":1612277902595,"results":"41","hashOfConfig":"32"},{"size":2659,"mtime":1610275697157,"results":"42","hashOfConfig":"32"},{"size":1644,"mtime":1612280204886,"results":"43","hashOfConfig":"32"},{"size":234,"mtime":1610279072801,"results":"44","hashOfConfig":"32"},{"size":3890,"mtime":1612277902592,"results":"45","hashOfConfig":"32"},{"size":4106,"mtime":1612277902599,"results":"46","hashOfConfig":"32"},{"size":2487,"mtime":1612277902593,"results":"47","hashOfConfig":"32"},{"size":3717,"mtime":1612280169869,"results":"48","hashOfConfig":"32"},{"size":3030,"mtime":1612277902592,"results":"49","hashOfConfig":"32"},{"size":4208,"mtime":1612111226127,"results":"50","hashOfConfig":"32"},{"size":12689,"mtime":1611418992848,"results":"51","hashOfConfig":"32"},{"size":1403,"mtime":1610895280365,"results":"52","hashOfConfig":"32"},{"size":218,"mtime":1610639301698,"results":"53","hashOfConfig":"32"},{"size":506,"mtime":1610640117649,"results":"54","hashOfConfig":"32"},{"size":1228,"mtime":1611776732361,"results":"55","hashOfConfig":"32"},{"size":533,"mtime":1611853786179,"results":"56","hashOfConfig":"32"},{"size":4315,"mtime":1611853645931,"results":"57","hashOfConfig":"32"},{"size":2441,"mtime":1612193687857,"results":"58","hashOfConfig":"32"},{"size":1440,"mtime":1612277902594,"results":"59","hashOfConfig":"32"},{"size":674,"mtime":1612033485083,"results":"60","hashOfConfig":"32"},{"size":2712,"mtime":1611760006734,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u1ln3l",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},"D:\\xampp\\htdocs\\react\\reactapp\\src\\index.js",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\App.js",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\JsFile.js",[],["131","132"],"D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Cardapp.js",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Passvalue.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Hookcall.jsx",["133"],"import React, { useState } from 'react';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\n\r\n\r\nconst Hookcall = (props) => {\r\n    let currTIme = new Date().toLocaleTimeString();\r\n\r\n    const [currentTIme, setTIme] = useState(currTIme); //useState is hook function that return current data and function\r\n\r\n    const ChangeTIme = () => {\r\n        currTIme = new Date().toLocaleTimeString();\r\n        setTIme(currTIme);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"manageDivCountBoxTime\">\r\n                <span id=\"timeCount\">{currentTIme}</span><br/><br/>\r\n                <button className=\"buttonClass\" onClick={ChangeTIme}>{props.button}</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Runtime = () => {\r\n    let currTIme = new Date().toLocaleTimeString();\r\n\r\n    const [currentTIme, setTime] = useState(currTIme);\r\n\r\n    const updateTIme = () => {\r\n        currTIme = new Date().toLocaleTimeString();\r\n        setTime(currTIme);\r\n    };\r\n    setInterval(updateTIme, 1000);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"manageDivAutoTime\">\r\n                <span id=\"timeAutoCount\">{currentTIme}</span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Hookcall;\r\nexport { Runtime };","D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Dropdown.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\IncrementVal.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\context\\Compa.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Multiplefields.jsx",["134"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useForm, useFieldArray } from 'react-hook-form';\r\nimport Select from 'react-select';\r\nimport { stateOptions } from '../assets/data_new';\r\n\r\nconst UserInformation = (props) => {\r\n    const { register, control } = props;\r\n    const { append, fields, remove } = useFieldArray({\r\n        control,\r\n        name: \"users\"\r\n    });\r\n    const onClickAdd = () => {\r\n        append({\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            emailaddress: \"\",\r\n            state: \"\"\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        onClickAdd();\r\n    }, []);\r\n        \r\n    return (\r\n        <div className=\"card mb-4\">\r\n            <div className=\"card-header\">User Detsails</div>\r\n            <div className=\"card-body\">\r\n                {\r\n                    fields.map((item, index) => (\r\n                        <div className=\"form-row form-group\" key={item.id}>\r\n                            <div className=\"col\">\r\n                                <input type=\"text\" className=\"form-control firstName\" name={`users[${index}].firstname`} defaultValue={item.firstname} ref={register()} placeholder=\"Enter Your First name\" />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input type=\"text\" className=\"form-control lastName\" name={`users[${index}].lastname`}  defaultValue={item.lastname} ref={register()} placeholder=\"Enter Your Last name\" />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input type=\"text\" className=\"form-control emailAddress\" name={`users[${index}].emailaddress`}  defaultValue={item.emailaddress} ref={register()} placeholder=\"Enter Your E-mail Address\" />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <select className=\"form-control state\" name={`users[${index}].state`}  defaultValue={item.state} ref={register()} id=\"state\">\r\n                                <option value=\"\">Select Your State</option>\r\n                                <option value=\"Jharkhand\">Jharkhand</option>\r\n                                <option value=\"Bihar\">Bihar</option>\r\n                                <option value=\"Assam\">Assam</option>\r\n                                <option value=\"Goa\">Goa</option>\r\n                                <option value=\"Manipur\">Manipur</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                            {\r\n                                (index === 0) ? \r\n                                <button type=\"button\" className=\"btn btn-danger\" disabled> <i className=\"fas fa-user-minus\"></i></button>\r\n                                :\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={() => remove(index)}> <i className=\"fas fa-user-minus\"></i></button>\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={onClickAdd}><i className=\"fas fa-user-plus\"></i> Add User</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst Multiplefields = () => {\r\n\r\n    const { register, handleSubmit, control, errors } = useForm();\r\n\r\n    const onSubmit = data => {\r\n        console.log(data)\r\n    } \r\n\r\n    const [options, selectedOption ] = useState();\r\n    const [optionsDrop, selectedOptionDrop ] = useState('Del');\r\n\r\n    const handleChange = (selectedOptions) => {\r\n        selectedOption(selectedOptions);\r\n        selectedOptionDrop(selectedOptions.value);\r\n    }\r\n\r\n    const basciForm = (\r\n        <Fragment>\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">User Detsails</div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"form-error\">{errors.fullname && 'Fullname are required'}</p>\r\n                        <input type=\"text\" className=\"form-control\" name=\"fullname\" id=\"fullname\" ref={register({required: true})} placeholder=\"Firstname\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <p className=\"form-error\">{errors.fullname && 'Fullname are required'}</p>\r\n                        <Select value={options} onChange={handleChange} options={stateOptions} />\r\n                        <input type=\"hidden\" name=\"country\" value={optionsDrop} ref={register({required: true})} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <p className=\"form-error\">{errors.email && 'Email are required'}</p>\r\n                        <input type=\"email\" className=\"form-control\"name=\"email\" id=\"email\" ref={register({required: true})} placeholder=\"Email\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <p className=\"form-error\">{errors.phone && 'Phone number are required'}</p>\r\n                        <input type=\"text\" className=\"form-control\" name=\"phone\" id=\"phone\" ref={register({required: true})} placeholder=\"Phone number\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <p className=\"form-error\">{errors.password && 'Password are required'}</p>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" ref={register({required: true})} placeholder=\"Password\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"container py-5\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    {basciForm}\r\n                    <UserInformation register={register} control={control} />\r\n                    <button type=\"submit\" className=\"btn btn-dark\"><i className=\"fas fa-save\"></i> Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\nexport default Multiplefields;","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\pages\\About.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\pages\\Contact.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\pages\\NotFound.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\pages\\Home.jsx",["135"],"import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    const[users, setUser] = useState([]);\r\n    \r\n    /* ===================== Loader effect before page load ======================== */\r\n    useEffect(() => {\r\n        loadUsers();\r\n        //fetchApi();\r\n    }, []); //[] used for stop infinite loop, only for 0 time. only first time page will render than it will ren\r\n    // and also if we have 2 button than if we want only first button action than we pass only first button const val\r\n\r\n    const loadUsers = async () => {\r\n        //const result = await axios.get('http://localhost:3003/users');\r\n        const result = await axios.get('http://shubhverma.tech/api/conn.php');\r\n        setUser(result.data.reverse());\r\n    }\r\n\r\n    const deleteUser = async (id) => {\r\n        //confirm(\"Are you sure, you want do delete?\");\r\n        const formData = JSON.stringify({ \"id\": id }); \r\n        await fetch(\"http://shubhverma.tech/api/delete.php\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            if(data >= 0) {\r\n                alert('Record deleted');\r\n            } else {\r\n                alert('Record not deleted');\r\n            }\r\n        });\r\n        loadUsers();\r\n    }\r\n\r\n    /*You now understand how to get data for your React components from an external API using fetch and axios.\r\n    Both achieve the same objective and you can choose either of the two.\r\n    \r\n    However, keep in mind that axios should be added as an npm dependency,\r\n    whereas fetch is available out of the box as a web API.\r\n    Another difference is that axios returns you the transformed JSON data,\r\n    but with fetch you need to parse the response and extract the JSON before passing it to React components.*/\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"py-4\">\r\n                    <h1>Home Page</h1>\r\n                    <table className=\"table table-striped table-light border shadow\">\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Username</th>\r\n                                <th scope=\"col\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                users.map((user, index) => (\r\n                                    <tr key={index+1}>\r\n                                        <th scope=\"row\">{index+1}</th>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.username}</td>\r\n                                        <td><Link className=\"btn btn-primary\" to={`/users/view/${user._id.$oid}`}>View</Link>&nbsp;&nbsp;\r\n                                        <Link className=\"btn btn-success\" to={`/users/edit/${user._id.$oid}`}>Edit</Link>&nbsp;&nbsp;\r\n                                        {/* <a href=\"#\" className=\"btn btn-danger\" onClick={() => deleteUser(user._id.$oid)}>Delete</a></td> */}\r\n                                        <button className=\"btn btn-danger\" onClick={() => deleteUser(user._id.$oid)}>Delete</button></td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\users\\EditUser.jsx",["136","137"],"import React, { useEffect, useState } from 'react';\r\n//import axios from 'axios';\r\nimport {useHistory, useParams } from 'react-router-dom';\r\n\r\nconst EditUser = () => {\r\n    let history = useHistory();\r\n    const { id } = useParams(); //Here id is that value which is passed from home component edit link and defined in Routing App.js\r\n\r\n    const[user, setUser] = useState({\r\n        name: \"\",\r\n        username: \"\",\r\n        email: \"\",  \r\n        phone: \"\",\r\n        website: \"\"\r\n    });\r\n\r\n    const { name, username, email, phone, website } = user;\r\n\r\n    const inputChange = (event) => {\r\n        setUser({ ...user, [event.target.name]: event.target.value });\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const nawArr = {...user, \"id\":id};\r\n        const formData = JSON.stringify(nawArr);\r\n        await fetch(\"http://shubhverma.tech/api/update.php\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            if(data.status === \"1\") {\r\n                alert('Record updated');\r\n                history.push('/');\r\n            } else {\r\n                alert('Record not update');\r\n                history.push('/');\r\n            }\r\n        });\r\n    }\r\n\r\n    const loadUsers = async (event) => {\r\n        /*const formData = JSON.stringify({ \"id\": id }); \r\n        await fetch(\"http://shubhverma.tech/api/read.php\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            if(data.status === \"1\") {\r\n                setUser(data.data);\r\n            } else {\r\n                alert('Record not found');\r\n            }\r\n        });*/\r\n\r\n        const formData = JSON.stringify({ \"id\": id }); \r\n        const response = await fetch(\"http://shubhverma.tech/api/read.php\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        });\r\n        const json = await response.json();\r\n        if(json.status === \"1\") {\r\n            setUser(json.data);\r\n        } else {\r\n            alert('Record not found');\r\n        }\r\n    } \r\n    \r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5\">\r\n                <h2 className=\"text-center mb-4\">Edit User</h2>\r\n                <form onSubmit={onSubmit} >\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Your Name\" name=\"name\" value={name} onChange={inputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Your Username\" name=\"username\" value={username} onChange={inputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" className=\"form-control form-control-lg\" placeholder=\"Your E-mail Address\" name=\"email\" value={email} onChange={inputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Your Phone Number\" name=\"phone\" value={phone} onChange={inputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Your Website Name\" name=\"website\" value={website} onChange={inputChange}\r\n                        />\r\n                    </div>\r\n                    <button className=\"btn btn-warning btn-block\">Update User</button>\r\n                    <button className=\"btn btn-warning btn-block\" onClick={() => history.push('/')}>Back</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default EditUser;","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\users\\ViewUser.jsx",["138","139","140"],"import React, { useEffect, useState } from 'react';\r\n//import axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst ViewUser = () => {\r\n    let history = useHistory(); //history.goBack() for go back page not for specific page\r\n    //const { id, prdname } = useParams();\r\n    const { id } = useParams(); //Here id is that value which is passed from home component edit link and defined in Routing App.js\r\n    \r\n    //console.log(id);\r\n    //console.log(prdname);\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    });\r\n\r\n    const[user, setUser] = useState({\r\n        name: \"\",\r\n        username: \"\",\r\n        email: \"\",  \r\n        phone: \"\",\r\n        website: \"\"\r\n    });\r\n\r\n    const { name, username, email, phone, website } = user;\r\n\r\n    const loadUsers = async (event) => {\r\n        const formData = JSON.stringify({ \"id\": id }); \r\n        await fetch(\"http://shubhverma.tech/api/read.php\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            if(data.status === \"1\") {\r\n                setUser(data.data);\r\n            } else {\r\n                alert('Record not found');\r\n            }\r\n        });        \r\n    } \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5\">\r\n                <h2 className=\"text-center mb-4\">Edit User</h2>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control form-control-lg\" defaultValue={name} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control form-control-lg\" defaultValue={username} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" className=\"form-control form-control-lg\" defaultValue={email} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control form-control-lg\" defaultValue={phone} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control form-control-lg\" defaultValue={website} />\r\n                </div>\r\n                <button className=\"btn btn-warning btn-block\" onClick={() => history.push('/')}>Back</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ViewUser;","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\users\\Imageupload.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\users\\AddUsers.jsx",["141"],"import React, { useState } from 'react';\r\n//import axios from 'axios';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst AddUser = () => {\r\n    let history = useHistory();\r\n    const[user, setUser] = useState({\r\n        name: \"\",\r\n        username: \"\",\r\n        email: \"\",  \r\n        phone: \"\",\r\n        website: \"\"\r\n    });\r\n\r\n    const { name, username, email, phone, website } = user;\r\n\r\n    const inputChange = (event) => {\r\n        //setName(event.target.value);\r\n        /*if(event.target.name === 'fname') {\r\n            alert(event.target.value.length);\r\n        }*/\r\n        setUser({ ...user, [event.target.name]: event.target.value });\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const formData = JSON.stringify(user); \r\n        await fetch(\"http://shubhverma.tech/api/create.php\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            if(data.status === \"1\") {\r\n                alert('Record added');\r\n                history.push('/');\r\n            } else {\r\n                alert('Record not added');\r\n                history.push('/');\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5\">\r\n                <h2 className=\"text-center mb-4\">Add User</h2>\r\n                <form onSubmit={onSubmit} >\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Your Name\" name=\"name\" value={name} onChange={inputChange} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Your Username\" name=\"username\" value={username} onChange={inputChange} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" className=\"form-control form-control-lg\" placeholder=\"Your E-mail Address\" name=\"email\" value={email} onChange={inputChange} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Your Phone Number\" name=\"phone\" value={phone} onChange={inputChange} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Your Website Name\" name=\"website\" value={website} onChange={inputChange} required />\r\n                    </div>\r\n                    <button className=\"btn btn-primary btn-block\">Add User</button>\r\n                    <button className=\"btn btn-warning btn-block\" onClick={() => history.push('/')}>Back</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default AddUser;","D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\layout\\Navigation.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\assets\\data.js",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Card.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\context\\Compb.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\context\\Compc.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Datepicker.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\temp\\Dropdownnew.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\assets\\data_new.js",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\pages\\Members.jsx",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\swDev.jsx",["142"],"//https://stackoverflow.com/questions/52299246/cant-find-serviceworker-in-navigator-anymore\r\n\r\n/*export default function swDev()\r\n{\r\n  function determineAppServerKey() {\r\n    const vapidPublicKey =\r\n    \"BJthRQ5myDgc7OSXzPCMftGw-n16F7zQBEN7EUD6XxcfTTvrLGWSIG7y_JxiWtVlCFua0S8MTB5rPziBqNx1qIo\";\r\n      return urlBase64ToUint8Array(vapidPublicKey);\r\n  }\r\n\r\n  function urlBase64ToUint8Array(base64String) {\r\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n    const base64 = (base64String + padding)\r\n      .replace(/\\-/g, '+')\r\n      .replace(/_/g, '/');\r\n\r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n  }\r\n  \r\n    let swUrl=  `${process.env.PUBLIC_URL}/sw.js`\r\n    navigator.serviceWorker.register(swUrl).then((response)=>{\r\n    //console.log(\"response\",response)\r\n\r\n        return response.pushManager.getSubscription()\r\n        .then(function (subscription) {\r\n           response.pushManager.subscribe({\r\n            userVisibleOnly: true,\r\n            applicationServerKey: determineAppServerKey()\r\n          });\r\n        });\r\n    }) \r\n}*/\r\n\r\nexport default function swDev() {\r\n\tlet swUrl=  `${process.env.PUBLIC_URL}/sw.js`;\r\n\tnavigator.serviceWorker.register(swUrl).then((response)=>{\r\n\t\t//console.log(\"response\",response)\r\n\t});\r\n}","D:\\xampp\\htdocs\\react\\reactapp\\src\\firebase.js",[],"D:\\xampp\\htdocs\\react\\reactapp\\src\\components\\pages\\Slider.jsx",["143","144","145","146","147"],"import React from 'react';\r\nimport './../../../src/slider.css';\r\n\r\nconst Slider = () => {\r\n\r\n\tvar slideIndex = 1;\r\n\tshowSlides(slideIndex);\r\n\r\n\tfunction plusSlides(n) {\r\n\t\tshowSlides(slideIndex += n);\r\n\t}\r\n\r\n\tfunction currentSlide(n) {\r\n\t\tshowSlides(slideIndex = n);\r\n\t}\r\n\r\n\t/*function showSlides(n) {\r\n\t\tvar i;\r\n\t\tvar slides = document.getElementsByClassName(\"mySlides\");\r\n\t\tvar dots = document.getElementsByClassName(\"dot\");\r\n\t\tif (n > slides.length) {slideIndex = 1}    \r\n\t\tif (n < 1) {slideIndex = slides.length}\r\n\t\tfor (i = 0; i < slides.length; i++) {\r\n\t\t\tslides[i].style.display = \"none\";  \r\n\t\t}\r\n\t\tfor (i = 0; i < dots.length; i++) {\r\n\t\t\tdots[i].className = dots[i].className.replace(\" active\", \"\");\r\n\t\t}\r\n\t\tslides[slideIndex-1].style.display = \"block\";  \r\n\t\tdots[slideIndex-1].className += \" active\";\r\n\t}*/\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n\t\t\t\t<div className=\"slideshow-container\">\r\n\t\t\t\t\t<div className=\"mySlides fade\">\r\n\t\t\t\t\t\t<div className=\"numbertext\">1 / 3</div>\r\n\t\t\t\t\t\t<img src=\"https://www.w3schools.com/howto/img_nature_wide.jpg\" alt=\"image 1\" style={{width:\"100%\"}} />\r\n\t\t\t\t\t\t<div className=\"text\">Caption Text</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"mySlides fade\">\r\n\t\t\t\t\t\t<div className=\"numbertext\">2 / 3</div>\r\n\t\t\t\t\t\t<img src=\"https://www.w3schools.com/howto/img_snow_wide.jpg\" alt=\"image 2\" style={{width:\"100%\"}} />\r\n\t\t\t\t\t\t<div className=\"text\">Caption Two</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"mySlides fade\">\r\n\t\t\t\t\t\t<div className=\"numbertext\">3 / 3</div>\r\n\t\t\t\t\t\t<img src=\"https://www.w3schools.com/howto/img_mountains_wide.jpg\" alt=\"image 3\" style={{width:\"100%\"}} />\r\n\t\t\t\t\t\t<div className=\"text\">Caption Three</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<a className=\"prev\" onClick={plusSlides(-1)}>&#10094;</a>\r\n\t\t\t\t\t<a className=\"next\" onClick={plusSlides(1)}>&#10095;</a>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div style={{textAlign:\"center\"}}>\r\n\t\t\t\t<span className=\"dot\" onClick={currentSlide(1)}></span> \r\n\t\t\t\t<span className=\"dot\" onClick={currentSlide(2)}></span> \r\n\t\t\t\t<span className=\"dot\" onClick={currentSlide(3)}></span> \r\n\t\t\t\t</div>\r\n            </div>\r\n        </>\r\n\t);\r\n\t\r\n\tfunction showSlides(n) {\r\n\t\tvar i;\r\n\t\tvar slides = document.getElementsByClassName(\"mySlides\");\r\n\t\tvar dots = document.getElementsByClassName(\"dot\");\r\n\t\tif(slides) {\r\n\t\t\tif (n > slides.length) {slideIndex = 1}    \r\n\t\t\tif (n < 1) {slideIndex = slides.length}\r\n\t\t\tfor (i = 0; i < slides.length; i++) {\r\n\t\t\t\tslides[i].style.display = \"none\";  \r\n\t\t\t}\r\n\t\t\tfor (i = 0; i < dots.length; i++) {\r\n\t\t\t\tdots[i].className = dots[i].className.replace(\" active\", \"\");\r\n\t\t\t}\r\n\t\t\tslides[slideIndex-1].style.display = \"block\";  \r\n\t\t\tdots[slideIndex-1].className += \" active\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Slider;",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":19},{"ruleId":"156","severity":1,"message":"157","line":23,"column":8,"nodeType":"158","endLine":23,"endColumn":10,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":72,"column":41,"nodeType":"162","endLine":72,"endColumn":113},{"ruleId":"152","severity":1,"message":"163","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":13},{"ruleId":"156","severity":1,"message":"164","line":11,"column":8,"nodeType":"158","endLine":11,"endColumn":10,"suggestions":"165"},{"ruleId":"152","severity":1,"message":"163","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":13},{"ruleId":"152","severity":1,"message":"166","line":7,"column":17,"nodeType":"154","messageId":"155","endLine":7,"endColumn":24},{"ruleId":"156","severity":1,"message":"164","line":14,"column":8,"nodeType":"158","endLine":14,"endColumn":10,"suggestions":"167"},{"ruleId":"152","severity":1,"message":"163","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":13},{"ruleId":"168","severity":1,"message":"169","line":12,"column":17,"nodeType":"170","messageId":"171","endLine":12,"endColumn":18,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":39,"column":7,"nodeType":"162","endLine":39,"endColumn":109},{"ruleId":"173","severity":1,"message":"174","line":45,"column":7,"nodeType":"162","endLine":45,"endColumn":107},{"ruleId":"173","severity":1,"message":"174","line":51,"column":7,"nodeType":"162","endLine":51,"endColumn":112},{"ruleId":"160","severity":1,"message":"161","line":55,"column":6,"nodeType":"162","endLine":55,"endColumn":51},{"ruleId":"160","severity":1,"message":"161","line":56,"column":6,"nodeType":"162","endLine":56,"endColumn":50},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'propTypes' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onClickAdd'. Either include it or remove the dependency array.","ArrayExpression",["177"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'loadUsers'. Either include it or remove the dependency array.",["178"],"'prdname' is assigned a value but never used.",["179"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["180","181"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"messageId":"187","fix":"188","desc":"189"},{"messageId":"190","fix":"191","desc":"192"},"Update the dependencies array to be: [onClickAdd]",{"range":"193","text":"194"},"Update the dependencies array to be: [loadUsers]",{"range":"195","text":"196"},{"range":"197","text":"196"},"removeEscape",{"range":"198","text":"199"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"200","text":"201"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[630,632],"[onClickAdd]",[391,393],"[loadUsers]",[514,516],[437,438],"",[437,437],"\\"]